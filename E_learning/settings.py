"""
Django settings for E_learning project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from dotenv import load_dotenv, find_dotenv

load_dotenv(find_dotenv())
# import django_heroku

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
if DEBUG == False:
    TEMPLATE_DEBUG = DEBUG
    SESSION_COOKIE_HTTPONLY = True
    CSRF_COOKIE_HTTPONLY = True
    SECURE_SSL_REDIRECT=True
    SESSION_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 31536000 #year
    SECURE_HSTS_PRELOAD =True
    SESSION_COOKIE_PATH = '/;HttpOnly'
    SECURE_CONTENT_TYPE_NOSNIFF = True
    CSRF_COOKIE_SECURE = True 
    SECURE_REFERRER_POLICY = 'same-origin'
    SECURE_HSTS_INCLUDE_SUBDOMAINS =True
ALLOWED_HOSTS = ["127.0.0.1","www.agartha.academy","agartha.academy"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.sites',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'social_django',  
    #y apps
    "home", 
    "Quiz",
    "accounts.apps.AccountsConfig",
    "Blogs",
    "Consultant",
    "Dashboard",
    "Frontend",
    #my packegs
    'rosetta',
    'embed_video',
    "taggit",
    'ckeditor',
    'ckeditor_uploader',
    'crispy_forms',
    'allauth',         
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.google',    
    # "allauth.socialaccount.providers.linkedin", 
    'allauth.socialaccount.providers.linkedin_oauth2',    
    'bootstrap_datepicker_plus',
    'django_cleanup',
    'captcha',
    # "storages",   
    # "debug_toolbar",
] 

MIDDLEWARE = [
    
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
   
    'accounts.middleware.OneSessionPerUserMiddleware',
    'crum.CurrentRequestUserMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
    # "whitenoise.middleware.WhiteNoiseMiddleware",
    #  "debug_toolbar.middleware.DebugToolbarMiddleware",
       ]



ROOT_URLCONF = 'E_learning.urls'
# APPEND_SLASH=False 
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/"templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                "home.processors.global_wishlist",
                "home.processors.global_news",
                'social_django.context_processors.backends',  
                'social_django.context_processors.login_redirect', 
                

            ],
        },
    },
]

WSGI_APPLICATION = 'E_learning.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
# DATABASES={
#     "default":{
#         "ENGINE":"django.db.backends.postgresql_psycopg2",
#         "NAME":os.environ["NAME"],
#         "USER":os.environ['USER'],
#         "PASSWORD":os.environ['PASSWORD'],
#         "HOST":"localhost",
#         "PORT":"5432",
#         # 'OPTIONS': {'sslmode': 'require'},
#     }      
# }  
CACHES = { 
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}
#debug toolbar
# INTERNAL_IPS = [
   
#     "127.0.0.1",
   
# ]
# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL ="accounts.User"
# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/
from django.utils.translation import gettext_lazy as _

LANGUAGE_CODE = 'en-us'
LANGUAGES = (            # supported languages
    ('en', _('English')),
    ("ar",_("Arabic")),
)
TIME_ZONE = 'Africa/Cairo'
STATIC_URL = 'https://garthaacademy.b-cdn.net/static/'
# MEDIA_URL="https://agartha2.b-cdn.net/static/"
# MEDIA_ROOT="https://agartha2.b-cdn.net""
STATIC_ROOT="https://garthaacademy.b-cdn.net"
STATICFILES_DIRS=[
  "https://garthaacademy.b-cdn.net/static/"
]  
    
# STATIC_URL = '/static/'
# # MEDIA_URL="https://agartha2.b-cdn.net/static/"
# # MEDIA_ROOT="https://agartha2.b-cdn.net""
# STATIC_ROOT=BASE_DIR/"static"
# STATICFILES_DIRS=[
#   BASE_DIR/"static_in_env"
# ]     
# for translation
LOCALE_PATHS=(   
    os.path.join(BASE_DIR,"locale/"),
             )
    
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

#date time picker
BOOTSTRAP4 = {
    'include_jquery': True,
}
# crispy forms
CRISPY_TEMPLATE_PACK = 'bootstrap4'
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger'
}
# "Email Backend"
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'mail.agartha.academy'
EMAIL_HOST_USER = os.environ["EMAIL_HOST_USER"]
EMAIL_HOST_PASSWORD =os.environ["EMAIL_HOST_PASSWORD"]
EMAIL_USE_TLS = False
EMAIL_USE_SSL= True
EMAIL_PORT = 465 
#allauth   
SITE_ID=1
LOGIN_REDIRECT_URL ="home:home"
LOGIN_URL = 'account_login'
LOGOUT_URL = 'account_logout'
# ACCOUNT_ADAPTER="allauth.account.adapter.DefaultAccountAdapter"
# SOCIALACCOUNT_ADAPTER ="allauth.socialaccount.adapter.DefaultSocialAccountAdapter"
ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS =True
ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL=LOGIN_REDIRECT_URL
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL =None
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS =1
ACCOUNT_EMAIL_CONFIRMATION_HMAC =True
ACCOUNT_EMAIL_REQUIRED =True
ACCOUNT_EMAIL_VERIFICATION ="mandatory"   
ACCOUNT_EMAIL_SUBJECT_PREFIX ="Site"
ACCOUNT_EMAIL_CONFIRMATION_COOLDOWN =120
ACCOUNT_EMAIL_MAX_LENGTH=245
ACCOUNT_MAX_EMAIL_ADDRESSES=1
ACCOUNT_LOGIN_ATTEMPTS_LIMIT =3
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT =120
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION =True
ACCOUNT_LOGOUT_ON_GET =True
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE =True
ACCOUNT_LOGIN_ON_PASSWORD_RESET =True
ACCOUNT_LOGOUT_REDIRECT_URL ="home:home"
ACCOUNT_PASSWORD_INPUT_RENDER_VALUE =True
ACCOUNT_PRESERVE_USERNAME_CASING =False
ACCOUNT_SESSION_REMEMBER =None
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE =True
ACCOUNT_SIGNUP_REDIRECT_URL =LOGIN_REDIRECT_URL
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
# ACCOUNT_USERNAME_BLACKLIST (=[])
ACCOUNT_UNIQUE_EMAIL =True
ACCOUNT_USERNAME_MIN_LENGTH =3
ACCOUNT_USERNAME_REQUIRED =True
SOCIALACCOUNT_AUTO_SIGNUP =True
SOCIALACCOUNT_EMAIL_VERIFICATION =ACCOUNT_EMAIL_VERIFICATION
SOCIALACCOUNT_EMAIL_REQUIRED =ACCOUNT_EMAIL_REQUIRED
SOCIALACCOUNT_QUERY_EMAIL =ACCOUNT_EMAIL_REQUIRED
SOCIALACCOUNT_STORE_TOKENS =True
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
        'client_id':os.environ["google_client_id"],
        'secret':os.environ["google_secret"],
        'key': '',
       
    }
    },
       'facebook': {
    'APP': {
        'client_id':os.environ["facebook_client_id"],
        'secret':os.environ["facebook_secret"],
        'key': '',
       
    }
    }, 
    'linkedin_oauth2': {    
    # 'SCOPE': [
    #     'r_basicprofile',
    #     # 'r_emailaddress'
    # ],
    # 'PROFILE_FIELDS': [
    #     'id',
    #     'first-name',
    #     'last-name',
    #     'email-address',
    #     'picture-url',
    #     'public-profile-url',
    # ], 
 'APP': {
        'client_id':os.environ["linkedin_client_id"],
        'secret':os.environ["linkedin_secret"],
        'key': '',
       
    },    

}
    
} 
ACCOUNT_FORMS = {
    'signup': 'accounts.forms.MyCustomSignupForm',
    'login': 'accounts.forms.MyCustomLoginForm',

} 
# SOCIALACCOUNT_FORMS = {
#     # 'disconnect': 'allauth.socialaccount.forms.DisconnectForm',
#     'signup': 'accounts.forms.MyCustomSocialSignupForm',
# }

# python social auth
AUTHENTICATION_BACKENDS = [

    'social_core.backends.facebook.FacebookOAuth2',
 'social_core.backends.linkedin.LinkedinOAuth2',
    'social_core.backends.google.GoogleOAuth2',
    # ............
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
    #      ...
]
SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
    # "accounts.pipeline.auth_allowed"
)
SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = os.environ["linkedin_client_id"]
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = os.environ["linkedin_secret"]
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.environ["google_client_id"]
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.environ["google_secret"]
SOCIAL_AUTH_FACEBOOK_KEY = os.environ["facebook_client_id"]
SOCIAL_AUTH_FACEBOOK_SECRET = os.environ["facebook_secret"]
SOCIAL_AUTH_RAISE_EXCEPTIONS = False
# SOCIAL_AUTH_JSONFIELD_ENABLED = True
SOCIAL_AUTH_LOGIN_ERROR_URL ="home:home"
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = ['r_liteprofile', 'r_emailaddress']
# Add the fields so they will be requested from linkedin.
SOCIAL_AUTH_LINKEDIN_OAUTH2_FIELD_SELECTORS = ['emailAddress']
# Arrange to add the fields to UserSocialAuth.extra_data
SOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [('id', 'id'),
                                          ('firstName', 'first_name'),
                                          ('lastName', 'last_name'),
                                          ('emailAddress', 'email_address')]
COURSE_MODEL="home.Course"

# CkEditor
CKEDITOR_CONFIGS = {
    'awesome_ckeditor': {
          
        
},
    'default': {
        'toolbar': 'full',
        'height': 300,
        'width': "auto",
        "language":"ar",
        'extraPlugins': ','.join([
            "language"
        ]),
},

}

CKEDITOR_UPLOAD_PATH = "ckeditor/"
CKEDITOR_IMAGE_BACKEND ="pillow"
CKEDITOR_ALLOW_NONIMAGE_FILES = False
CKEDITOR_RESTRICT_BY_USER =True
CKEDITOR_BROWSE_SHOW_DIRS =False
CKEDITOR_FORCE_JPEG_COMPRESSION =True
### google recaptcha
RECAPTCHA_PUBLIC_KEY = os.environ["RECAPTCHA_PUBLIC_KEY"]
RECAPTCHA_PRIVATE_KEY = os.environ["RECAPTCHA_PRIVATE_KEY"]
