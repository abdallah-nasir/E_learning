# Generated by Django 3.2.8 on 2022-01-07 19:55

import Blogs.models
import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details', ckeditor.fields.RichTextField()),
                ('data', models.TextField(blank=True)),
                ('video', models.FileField(blank=True, null=True, upload_to=Blogs.models.upload_blog_videos)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid', models.BooleanField(default=False)),
                ('blog_type', models.CharField(choices=[('standard', 'standard'), ('gallery', 'gallery'), ('video', 'video'), ('audio', 'audio'), ('quote', 'quote'), ('link', 'link')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('approved', 'approved'), ('declined', 'declined')], default='pending', max_length=50)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
            ],
            managers=[
                ('check_reject', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Blog_Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Blog_Comment_Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Blog_Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=Blogs.models.upload_blog_images)),
            ],
        ),
        migrations.CreateModel(
            name='Blog_Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('Paymob', 'Paymob'), ('Western Union', 'Western Union'), ('Paypal', 'Paypal')], max_length=50)),
                ('payment_image', models.ImageField(blank=True, null=True, upload_to=Blogs.models.upload_blog_payment)),
                ('transaction_number', models.CharField(max_length=50, null=True)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('approved', 'approved'), ('declined', 'declined')], default='pending', max_length=50)),
                ('created_at', models.DateField()),
                ('expired_at', models.DateField(blank=True, null=True)),
                ('expired', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Prices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('price', models.FloatField(default=0)),
                ('data', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Blog_Views',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='blog_viewers', to='Blogs.blog')),
            ],
        ),
    ]
